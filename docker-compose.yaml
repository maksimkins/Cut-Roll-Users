version: '3.8'

services:

  cut-roll-users:
    image: makedoniaz/cut-roll-users:latest
    build:
      context: .
      dockerfile: app.Dockerfile
    container_name: users_container
    environment:
      ASPNETCORE_URLS: http://+:80 
      POSTGRES_CONNECTION_STRING: "Host=${POSTGRES_HOST};Port=${POSTGRES_PORT};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Database=${POSTGRES_DB};Pooling=true;"
      JWT_KEY: "${JWT_KEY}"
      JWT_LIFE_TIME_IN_MINUTES: "${JWT_LIFE_TIME_IN_MINUTES}"
      JWT_ISSUER: "${JWT_ISSUER}"
      JWT_AUDIENCE: "${JWT_AUDIENCE}"
      RABBIT_MQ_HOSTNAME: "${RABBIT_MQ_HOSTNAME}"
      RABBIT_MQ_USERNAME: "${RABBIT_MQ_USERNAME}"
      RABBIT_MQ_PASSWORD: "${RABBIT_MQ_PASSWORD}"
      ASPNETCORE_ENVIRONMENT: "${ASPNETCORE_ENVIRONMENT}"

    expose:
      - "80" 
    volumes:
      - ./Data/SqlScripts:/app/SqlScripts
    depends_on:
      - postgres-users
    networks:
      - web
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.users.rule=Host(`cutnroll.it.com`) && PathPrefix(`/api/users`)"
      - "traefik.http.routers.users.entrypoints=websecure"
      - "traefik.http.routers.users.tls.certresolver=myresolver"
      - "traefik.http.services.users.loadbalancer.server.port=80"
      - "traefik.http.middlewares.users-strip-prefix.stripprefix.prefixes=/api/users"
      - "traefik.http.routers.users.middlewares=users-strip-prefix"

  
  postgres-users:
    image: postgres:latest
    container_name: users_db_container
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    expose:
      - ${POSTGRES_PORT}
    ports:
      - "5433:${POSTGRES_PORT}"
    networks:
      - web
    volumes:
      - users_db_volume:/var/lib/postgresql/data
    restart: always

volumes:
  users_db_volume:

networks:
  web:
    external: true
